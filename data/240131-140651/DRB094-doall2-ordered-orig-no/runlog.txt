Taskracer detects TSAN runtime, carrying out race detection using DPST
Computation Graph recording enabled

 
ConcurrencyVector constructor, capacity is 200000000 
Example of tsan interface (__tsan_print) 
ThreadSanitizer:DEADLYSIGNAL
==8129==ERROR: ThreadSanitizer: SEGV on unknown address 0x000000000020 (pc 0x7fe99f6d8e8e bp 0x7b20000080c8 sp 0x7fe99d7ba300 T8133)
ThreadSanitizer:DEADLYSIGNAL
==8129==The signal is caused by a READ memory access.
==8129==Hint: address points to the zero page.
    #0 ompt_ta_dependences(ompt_data_t*, ompt_dependence_t const*, int) ompt-tsan.cpp (libtaskracer.so+0x15e8e)
    #1 __kmpc_doacross_wait <null> (libomp.so+0x2f7c4)
    #2 .omp_outlined._debug__ /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB094-doall2-ordered-orig-no.c:67:1 (DRB094-doall2-ordered-orig-no+0xd1a14)
    #3 .omp_outlined. /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB094-doall2-ordered-orig-no.c:62:1 (DRB094-doall2-ordered-orig-no+0xd1bb5)
    #4 __kmp_invoke_microtask <null> (libomp.so+0xb9292)
    #5 __kmp_invoke_task_func <null> (libomp.so+0x3e425)
    #6 __kmp_launch_thread <null> (libomp.so+0x3d3aa)
    #7 __kmp_launch_worker(void*) z_Linux_util.cpp (libomp.so+0x98e8c)
    #8 __tsan_thread_start_func /home/fjin/newllvm/llvm-project/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1012:15 (DRB094-doall2-ordered-orig-no+0x4de46)
    #9 start_thread /build/glibc-CVJwZb/glibc-2.27/nptl/pthread_create.c:463 (libpthread.so.0+0x76da) (BuildId: 1f06001733b9be9478b105faf0dac6bdf36c85de)
    #10 __clone /build/glibc-CVJwZb/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95 (libc.so.6+0x12161e) (BuildId: f7307432a8b162377e77a182b6cc2e53d771ec4b)

ThreadSanitizer can not provide additional info.
SUMMARY: ThreadSanitizer: SEGV ompt-tsan.cpp in ompt_ta_dependences(ompt_data_t*, ompt_dependence_t const*, int)
==8129==ABORTING
