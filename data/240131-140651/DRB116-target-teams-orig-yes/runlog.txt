Taskracer detects TSAN runtime, carrying out race detection using DPST
Computation Graph recording enabled
[implicit_task] initial task begin 
[parallel_begin] file: /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB116-target-teams-orig-yes.c, line: 64, col: 1 
[implicit_task] initial task begin 
[implicit_task] initial task begin 
[parallel_end] current node is 4, requested parallelsim is 8, [parallel_end] current node is 6, requested parallelsim is 8, [implicit_task] initial task end, parallel region is 0x7b0c0000bc70, current step is 12 
[parallel_end] current node is 2, requested parallelsim is 2, [parallel_end] file: /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB116-target-teams-orig-yes.c, line: 64, col: 32 
a[50]=100.000000
[implicit_task] initial task end, parallel region is (nil), current step is 13 
[implicit_task] initial task end, parallel region is 0x7b0c0000bc70, current step is 11 
JSON data written to 'data/rawgraphml.json'

 
ConcurrencyVector constructor, capacity is 200000000 
Example of tsan interface (__tsan_print) 
